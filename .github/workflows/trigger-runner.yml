name: Trigger Runner Setup

on:
  #schedule:
    #- cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  trigger-runner:
    runs-on: ubuntu-latest
    steps:
      - name: Debug and Run Runner
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          command_timeout: 20m
          script: |
            echo "Active user: $(whoami)"
            echo "Home directory: $HOME"
            cd /home/azureuser/actions-runner || exit 1
            
            # Stop existing service and cleanup
            if sudo systemctl list-units --all | grep -q "actions.runner"; then
              echo "Stopping and removing existing service..."
              sudo ./svc.sh uninstall || true
              sudo systemctl daemon-reload
              sleep 5
            fi

            # Process cleanup
            echo "Checking for runner processes..."
            RUNNER_PIDS=$(ps aux | grep "[a]ctions-runner/bin" | awk '{print $2}')
            if [ ! -z "$RUNNER_PIDS" ]; then
              echo "Found running processes: $RUNNER_PIDS"
              for PID in $RUNNER_PIDS; do
                sudo kill -15 $PID || true
              done
              sleep 10
              
              REMAINING_PIDS=$(ps aux | grep "[a]ctions-runner/bin" | awk '{print $2}')
              if [ ! -z "$REMAINING_PIDS" ]; then
                for PID in $REMAINING_PIDS; do
                  sudo kill -9 $PID || true
                done
                sleep 5
              fi
            fi

            # Cleanup
            echo "Cleaning up directories and files..."
            if [ -d "_diag" ]; then
              rm -rf _diag/*
            fi
            rm -f .runner
            rm -f .service

            # Ensure correct permissions
            echo "Setting correct permissions..."
            sudo chown -R $USER:$USER .
            sudo chmod -R 755 .

            # Verify runner configuration
            if [ ! -f ".credentials" ]; then
              echo "Runner not configured! Please configure the runner first."
              exit 1
            fi

            # Run the runner directly first to ensure it's working
            echo "Testing runner..."
            timeout 30s ./run.sh --once || {
              echo "Runner test failed"
              cat _diag/*.log
              exit 1
            }

            # Install the service
            echo "Installing service..."
            sudo ./svc.sh install $USER || {
              echo "Failed to install service"
              exit 1
            }

            # Reload systemd
            echo "Reloading systemd..."
            sudo systemctl daemon-reload

            # Start the service
            echo "Starting service..."
            sudo ./svc.sh start || {
              echo "Failed to start service"
              exit 1
            }

            # Wait and verify
            echo "Waiting for service to stabilize..."
            sleep 15

            # Check service status with detailed output
            echo "Checking service status..."
            sudo systemctl status actions.runner.* || true
            
            # Verify process is running
            if ps aux | grep -q "[a]ctions-runner/bin"; then
              echo "Runner process verified"
              echo "Service logs:"
              sudo journalctl -u actions.runner.* --no-pager -n 50
            else
              echo "Runner process not found. Service logs:"
              sudo journalctl -u actions.runner.* --no-pager -n 50
              exit 1
            fi
